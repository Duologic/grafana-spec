{
   "openapi": "3.0.0",
   "info": {
      "title": "Generated by cue.",
      "version": "no version"
   },
   "paths": {},
   "components": {
      "schemas": {
         "Family": {
            "type": "object",
            "required": [
               "style",
               "editable",
               "graphTooltip",
               "schemaVersion"
            ],
            "properties": {
               "id": {
                  "description": "Unique numeric identifier for the dashboard.\nTODO must isolate or remove identifiers local to a Grafana instance...?",
                  "type": "integer",
                  "minimum": 0
               },
               "uid": {
                  "description": "Unique dashboard identifier that can be generated by anyone. string (8-40)",
                  "type": "string"
               },
               "title": {
                  "description": "Title of dashboard.",
                  "type": "string"
               },
               "description": {
                  "description": "Description of dashboard.",
                  "type": "string"
               },
               "gnetId": {
                  "type": "string"
               },
               "tags": {
                  "description": "Tags associated with dashboard.",
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               "style": {
                  "description": "Theme of dashboard.",
                  "type": "string",
                  "enum": [
                     "light",
                     "dark"
                  ],
                  "default": "light"
               },
               "timezone": {
                  "description": "Timezone of dashboard,",
                  "type": "string",
                  "enum": [
                     "browser",
                     "utc",
                     ""
                  ],
                  "default": "browser"
               },
               "editable": {
                  "description": "Whether a dashboard is editable or not.",
                  "type": "boolean",
                  "default": true
               },
               "graphTooltip": {
                  "description": "0 for no shared crosshair or tooltip (default).\n1 for shared crosshair.\n2 for shared crosshair AND shared tooltip.",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 2,
                  "default": 0
               },
               "time": {
                  "description": "Time range for dashboard, e.g. last 6 hours, last 7 days, etc",
                  "type": "object",
                  "required": [
                     "from",
                     "to"
                  ],
                  "properties": {
                     "from": {
                        "type": "string",
                        "default": "now-6h"
                     },
                     "to": {
                        "type": "string",
                        "default": "now"
                     }
                  }
               },
               "timepicker": {
                  "description": "Timepicker metadata.",
                  "type": "object",
                  "required": [
                     "collapse",
                     "enable",
                     "hidden",
                     "refresh_intervals"
                  ],
                  "properties": {
                     "collapse": {
                        "description": "Whether timepicker is collapsed or not.",
                        "type": "boolean",
                        "default": false
                     },
                     "enable": {
                        "description": "Whether timepicker is enabled or not.",
                        "type": "boolean",
                        "default": true
                     },
                     "hidden": {
                        "description": "Whether timepicker is visible or not.",
                        "type": "boolean",
                        "default": false
                     },
                     "refresh_intervals": {
                        "description": "Selectable intervals for auto-refresh.",
                        "type": "array",
                        "items": {
                           "type": "string"
                        },
                        "default": [
                           "5s",
                           "10s",
                           "30s",
                           "1m",
                           "5m",
                           "15m",
                           "30m",
                           "1h",
                           "2h",
                           "1d"
                        ]
                     }
                  }
               },
               "templating": {
                  "type": "object",
                  "required": [
                     "list"
                  ],
                  "properties": {
                     "list": {
                        "description": "Templating.",
                        "type": "array",
                        "items": {
                           "type": "object"
                        }
                     }
                  }
               },
               "annotations": {
                  "type": "object",
                  "required": [
                     "list"
                  ],
                  "properties": {
                     "list": {
                        "description": "Annotations.",
                        "type": "array",
                        "items": {
                           "type": "object",
                           "required": [
                              "builtIn",
                              "datasource",
                              "enable",
                              "type",
                              "showIn"
                           ],
                           "properties": {
                              "builtIn": {
                                 "type": "integer",
                                 "minimum": 0,
                                 "default": 0
                              },
                              "datasource": {
                                 "description": "Datasource to use for annotation.",
                                 "type": "string"
                              },
                              "enable": {
                                 "description": "Whether annotation is enabled.",
                                 "type": "boolean",
                                 "default": true
                              },
                              "hide": {
                                 "description": "Whether to hide annotation.",
                                 "type": "boolean",
                                 "default": false
                              },
                              "iconColor": {
                                 "description": "Annotation icon color.",
                                 "type": "string"
                              },
                              "name": {
                                 "description": "Name of annotation.",
                                 "type": "string"
                              },
                              "type": {
                                 "type": "string",
                                 "default": "dashboard"
                              },
                              "rawQuery": {
                                 "description": "Query for annotation data.",
                                 "type": "string"
                              },
                              "showIn": {
                                 "type": "integer",
                                 "minimum": 0,
                                 "default": 0
                              }
                           }
                        }
                     }
                  }
               },
               "refresh": {
                  "description": "Auto-refresh interval.",
                  "oneOf": [
                     {
                        "enum": [
                           false
                        ]
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "schemaVersion": {
                  "description": "Version of the JSON schema, incremented each time a Grafana update brings\nchanges to said schema.\nFIXME this is the old schema numbering system, and will be replaced by scuemata",
                  "type": "integer",
                  "minimum": 0,
                  "default": 30
               },
               "version": {
                  "description": "Version of the dashboard, incremented each time the dashboard is updated.",
                  "type": "integer",
                  "minimum": 0
               },
               "panels": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "oneOf": [
                        {
                           "$ref": "#/components/schemas/Family.Panel"
                        },
                        {
                           "$ref": "#/components/schemas/Family.GraphPanel"
                        },
                        {
                           "$ref": "#/components/schemas/Family.RowPanel"
                        }
                     ]
                  }
               }
            }
         },
         "Family.FieldColor": {
            "description": "TODO docs",
            "type": "object",
            "required": [
               "mode"
            ],
            "properties": {
               "mode": {
                  "description": "The main color scheme mode",
                  "type": "string",
                  "oneOf": [
                     {
                        "enum": [
                           "thresholds",
                           "palette-classic",
                           "palette-saturated",
                           "continuous-GrYlRd",
                           "fixed"
                        ]
                     },
                     {}
                  ]
               },
               "fixedColor": {
                  "description": "Stores the fixed color value if mode is fixed",
                  "type": "string"
               },
               "seriesBy": {
                  "$ref": "#/components/schemas/Family.FieldColorSeriesByMode"
               }
            }
         },
         "Family.FieldColorModeId": {
            "description": "TODO docs",
            "type": "string",
            "enum": [
               "thresholds",
               "palette-classic",
               "palette-saturated",
               "continuous-GrYlRd",
               "fixed"
            ]
         },
         "Family.FieldColorSeriesByMode": {
            "description": "TODO docs",
            "type": "string",
            "enum": [
               "min",
               "max",
               "last"
            ]
         },
         "Family.GraphPanel": {
            "description": "Support for legacy graph panels.",
            "type": "object",
            "required": [
               "type",
               "thresholds",
               "seriesOverrides",
               "bars",
               "dashes",
               "dashLength",
               "hiddenSeries",
               "legend",
               "lines",
               "nullPointMode",
               "percentage",
               "points",
               "renderer",
               "spaceLength",
               "stack",
               "steppedLine"
            ],
            "properties": {
               "type": {
                  "type": "string",
                  "enum": [
                     "graph"
                  ]
               },
               "thresholds": {
                  "type": "array",
                  "items": {
                     "type": "object"
                  }
               },
               "timeRegions": {
                  "type": "array",
                  "items": {
                     "type": "object"
                  }
               },
               "seriesOverrides": {
                  "type": "array",
                  "items": {
                     "type": "object"
                  }
               },
               "aliasColors": {
                  "type": "object",
                  "additionalProperties": {
                     "type": "string"
                  }
               },
               "bars": {
                  "type": "boolean",
                  "default": false
               },
               "dashes": {
                  "type": "boolean",
                  "default": false
               },
               "dashLength": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 10
               },
               "fill": {
                  "type": "integer",
                  "minimum": 0
               },
               "fillGradient": {
                  "type": "integer",
                  "minimum": 0
               },
               "hiddenSeries": {
                  "type": "boolean",
                  "default": false
               },
               "legend": {
                  "type": "object"
               },
               "lines": {
                  "type": "boolean",
                  "default": false
               },
               "linewidth": {
                  "type": "integer",
                  "minimum": 0
               },
               "nullPointMode": {
                  "type": "string",
                  "enum": [
                     "null",
                     "connected",
                     "null as zero"
                  ],
                  "default": "null"
               },
               "percentage": {
                  "type": "boolean",
                  "default": false
               },
               "points": {
                  "type": "boolean",
                  "default": false
               },
               "pointradius": {
                  "type": "integer",
                  "minimum": 0
               },
               "renderer": {
                  "type": "string"
               },
               "spaceLength": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 10
               },
               "stack": {
                  "type": "boolean",
                  "default": false
               },
               "steppedLine": {
                  "type": "boolean",
                  "default": false
               },
               "tooltip": {
                  "type": "object",
                  "required": [
                     "sort",
                     "value_type"
                  ],
                  "properties": {
                     "shared": {
                        "type": "boolean"
                     },
                     "sort": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                     },
                     "value_type": {
                        "type": "string",
                        "enum": [
                           "individual",
                           "cumulative"
                        ],
                        "default": "individual"
                     }
                  }
               }
            }
         },
         "Family.Panel": {
            "description": "Dashboard panels. Panels are canonically defined inline\nbecause they share a version timeline with the dashboard\nschema; they do not evolve independently.",
            "type": "object",
            "required": [
               "type",
               "transparent",
               "repeatDirection",
               "transformations",
               "options",
               "fieldConfig"
            ],
            "properties": {
               "type": {
                  "description": "The panel plugin type id.",
                  "type": "string"
               },
               "id": {
                  "description": "TODO docs",
                  "type": "integer",
                  "minimum": 0
               },
               "pluginVersion": {
                  "description": "FIXME this almost certainly has to be changed in favor of scuemata versions",
                  "type": "string"
               },
               "tags": {
                  "description": "TODO docs",
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               "targets": {
                  "description": "TODO docs",
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Family.Target"
                  }
               },
               "title": {
                  "description": "Panel title.",
                  "type": "string"
               },
               "description": {
                  "description": "Description.",
                  "type": "string"
               },
               "transparent": {
                  "description": "Whether to display the panel without a background.",
                  "type": "boolean",
                  "default": false
               },
               "datasource": {
                  "description": "Name of default datasource.",
                  "type": "string"
               },
               "gridPos": {
                  "description": "Grid position.",
                  "type": "object",
                  "required": [
                     "h",
                     "w",
                     "x",
                     "y"
                  ],
                  "properties": {
                     "h": {
                        "description": "Panel",
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "default": 9
                     },
                     "w": {
                        "description": "Panel",
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "maximum": 24,
                        "default": 12
                     },
                     "x": {
                        "description": "Panel x",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 24,
                        "exclusiveMaximum": true,
                        "default": 0
                     },
                     "y": {
                        "description": "Panel y",
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                     },
                     "static": {
                        "description": "true if fixed",
                        "type": "boolean"
                     }
                  }
               },
               "links": {
                  "description": "Panel links.\nFIXME this is temporarily specified as a closed list so\nthat validation will pass when no links are present, but\nto force a failure as soon as it's checked against there\nbeing anything in the list so it can be fixed in\naccordance with that object",
                  "type": "array",
                  "enum": [
                     []
                  ]
               },
               "repeat": {
                  "description": "Name of template variable to repeat for.",
                  "type": "string"
               },
               "repeatDirection": {
                  "description": "Direction to repeat in if 'repeat' is set.\n\"h\" for horizontal, \"v\" for vertical.",
                  "type": "string",
                  "enum": [
                     "h",
                     "v"
                  ],
                  "default": "h"
               },
               "maxDataPoints": {
                  "description": "TODO docs",
                  "type": "integer",
                  "minimum": 0
               },
               "thresholds": {
                  "description": "TODO docs",
                  "type": "array",
                  "items": {}
               },
               "timeRegions": {
                  "description": "TODO docs",
                  "type": "array",
                  "items": {}
               },
               "transformations": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Family.Transformation"
                  }
               },
               "interval": {
                  "description": "TODO docs\nTODO tighter constraint",
                  "type": "string"
               },
               "timeFrom": {
                  "description": "TODO docs\nTODO tighter constraint",
                  "type": "string"
               },
               "timeShift": {
                  "description": "TODO docs\nTODO tighter constraint",
                  "type": "string"
               },
               "options": {
                  "description": "options is specified by the PanelOptions field in panel\nplugin schemas.\n\n\nMake the plugin-composed subtrees open if the panel is\nof unknown types. This is important in every possible case:\n- Base (this file only): no real dashboard json\n  containing any panels would ever validate\n- Dist (this file + core plugin schema): dashboard json containing\n  panels with any third-party panel plugins would fail to validate,\n  as well as any core plugins lacking a models.cue. The latter case\n  is not normally expected, but this is not the appropriate place\n  to enforce the invariant, anyway.\n- Instance (this file + core + third-party plugin schema): dashboard\n  json containing panels with a third-party plugin that exists but\n  is not currently installed would fail to validate.",
                  "type": "object"
               },
               "fieldConfig": {
                  "type": "object",
                  "properties": {
                     "defaults": {
                        "type": "object",
                        "required": [
                           "custom"
                        ],
                        "properties": {
                           "custom": {
                              "type": "object"
                           }
                        }
                     },
                     "overrides": {
                        "type": "array",
                        "items": {
                           "type": "object",
                           "required": [
                              "matcher",
                              "properties"
                           ],
                           "properties": {
                              "matcher": {
                                 "type": "object",
                                 "required": [
                                    "id"
                                 ],
                                 "properties": {
                                    "id": {
                                       "type": "string",
                                       "default": ""
                                    },
                                    "options": {}
                                 }
                              },
                              "properties": {
                                 "type": "array",
                                 "items": {
                                    "type": "object",
                                    "required": [
                                       "id"
                                    ],
                                    "properties": {
                                       "id": {
                                          "type": "string",
                                          "default": ""
                                       },
                                       "value": {}
                                    }
                                 }
                              }
                           }
                        }
                     }
                  },
                  "allOf": [
                     {
                        "required": [
                           "defaults",
                           "overrides"
                        ]
                     },
                     {
                        "required": [
                           "defaults"
                        ]
                     }
                  ]
               }
            }
         },
         "Family.RowPanel": {
            "description": "Row panel",
            "type": "object",
            "required": [
               "type",
               "collapsed",
               "id",
               "panels"
            ],
            "properties": {
               "type": {
                  "type": "string",
                  "enum": [
                     "row"
                  ]
               },
               "collapsed": {
                  "type": "boolean",
                  "default": false
               },
               "title": {
                  "type": "string"
               },
               "datasource": {
                  "description": "Name of default datasource.",
                  "type": "string"
               },
               "gridPos": {
                  "type": "object",
                  "required": [
                     "h",
                     "w",
                     "x",
                     "y"
                  ],
                  "properties": {
                     "h": {
                        "description": "Panel",
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "default": 9
                     },
                     "w": {
                        "description": "Panel",
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "maximum": 24,
                        "default": 12
                     },
                     "x": {
                        "description": "Panel x",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 24,
                        "exclusiveMaximum": true,
                        "default": 0
                     },
                     "y": {
                        "description": "Panel y",
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                     },
                     "static": {
                        "description": "true if fixed",
                        "type": "boolean"
                     }
                  }
               },
               "id": {
                  "type": "integer",
                  "minimum": 0
               },
               "panels": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "oneOf": [
                        {
                           "$ref": "#/components/schemas/Family.Panel"
                        },
                        {
                           "$ref": "#/components/schemas/Family.GraphPanel"
                        }
                     ]
                  }
               }
            }
         },
         "Family.Target": {
            "description": "Schema for panel targets is specified by datasource\nplugins. We use a placeholder definition, which the Go\nschema loader either left open/as-is with the Base\nvariant of the Dashboard and Panel families, or filled\nwith types derived from plugins in the Instance variant.\nWhen working directly from CUE, importers can extend this\ntype directly to achieve the same effect.",
            "type": "object"
         },
         "Family.Threshold": {
            "description": "TODO docs",
            "type": "object",
            "required": [
               "color"
            ],
            "properties": {
               "value": {
                  "description": "TODO docs\nFIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON",
                  "type": "integer",
                  "minimum": 0
               },
               "color": {
                  "description": "TODO docs",
                  "type": "string"
               },
               "state": {
                  "description": "TODO docs\nTODO are the values here enumerable into a disjunction?\nSome seem to be listed in typescript comment",
                  "type": "string"
               }
            }
         },
         "Family.ThresholdsConfig": {
            "type": "object",
            "required": [
               "mode",
               "steps"
            ],
            "properties": {
               "mode": {
                  "$ref": "#/components/schemas/Family.ThresholdsMode"
               },
               "steps": {
                  "description": "Must be sorted by 'value', first value is always -Infinity",
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Family.Threshold"
                  }
               }
            }
         },
         "Family.ThresholdsMode": {
            "type": "string",
            "enum": [
               "absolute",
               "percentage"
            ]
         },
         "Family.Transformation": {
            "description": "TODO docs\nFIXME this is extremely underspecfied; wasn't obvious which typescript types corresponded to it",
            "type": "object",
            "required": [
               "id",
               "options"
            ],
            "properties": {
               "id": {
                  "type": "string"
               },
               "options": {
                  "type": "object"
               }
            }
         }
      }
   }
}
